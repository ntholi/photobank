// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  moderator
  admin
}

model User {
  id             Int       @id @default(autoincrement())
  username       String    @unique
  firstName      String?
  lastName       String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  role           Role      @default(user)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  photos          Photo[]
  purchasedPhotos PurchasedPhotos[]
  savedPhotos     SavedPhotos[]

  @@map("users")
}

enum PhotoStatus {
  pending
  approved
  rejected
}

model Photo {
  id              Int               @id @default(autoincrement())
  name            String
  status          PhotoStatus       @default(pending)
  description     String?
  location        String?
  url             String
  user            User              @relation(fields: [userId], references: [id])
  userId          Int
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")
  purchasedPhotos PurchasedPhotos[]
  savedPhotos     SavedPhotos[]

  @@map("photos")
}

model PurchasedPhotos {
  id        Int      @id @default(autoincrement())
  photo     Photo    @relation(fields: [photoId], references: [id])
  photoId   Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("purchased_photos")
}

model SavedPhotos {
  id        Int      @id @default(autoincrement())
  photo     Photo    @relation(fields: [photoId], references: [id])
  photoId   Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("saved_photos")
}
